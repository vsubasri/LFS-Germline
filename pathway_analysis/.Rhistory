for (n in neighbors) {
custom.config$n_neighbors <- n
data.frame(umap(as.matrix(tertMerged[2:8]))[1]) %>% mutate(Disease = tertMerged$primary.disease.or.tissue) %>%
ggplot(aes(X1, X2,color = Disease)) + geom_point() + theme(legend.position = "none")
}
n
data.frame(umap(as.matrix(tertMerged[2:8]))[1]) %>% mutate(Disease = tertMerged$primary.disease.or.tissue) %>%
ggplot(aes(X1, X2,color = Disease)) + geom_point() + theme(legend.position = "none")
data.frame(umap(as.matrix(tertMerged[2:8]),custom.config)[1]) %>% mutate(Disease = tertMerged$primary.disease.or.tissue) %>%
ggplot(aes(X1, X2,color = Disease)) + geom_point() + theme(legend.position = "none")
sqrt(20000)
custom.config$n_neighbors <- 128
embedding_custom <- data.frame(umap(as.matrix(tertMerged[2:8]),custom.config))
View(tertSurvival)
View(tertSurvival)
View(tertMerged)
tertMerged_survival <- tertMerged[!is.na(tertMerged$OS.time),]
fit <- survfit(Surv(survival) ~ status, data = pheno)
median(tertMerged_survival$ENST00000522877.1)
min(tertMerged_survival$ENST00000522877.1)
table(tertMerged_survival$ENST00000522877.1)
tertMerged_survival <- ifelse(tertMerged_survival$ENST00000522877.1 > median(tertMerged_survival$ENST00000522877.1),"High","Low")
tertMerged_survival <- tertMerged[!is.na(tertMerged$OS.time),]
tertMerged_survival$status <- ifelse(tertMerged_survival$ENST00000522877.1 > median(tertMerged_survival$ENST00000522877.1),"High","Low")
fit <- survfit(Surv(OS) ~ status, data = tertMerged_survival)
ggsurvplot(fit, data = pheno,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
ggsurvplot(fit, data = tertMerged_survival,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
tertMerged_survival$ENST00000460137.6
View(tertMerged_survival)
median(tertMerged_survival[2:8])
apply(tertMerged_survival[2:8],2,median
)
table(tertMerged_survival$primary.disease.or.tissue)
tertMerged_survival_HN <-tertMerged_survival[tertMerged_survival$primary.disease.or.tissue == "Head & Neck Squamous Cell Carcinoma",]
tertMerged_survival_HN$status <- ifelse(ttertMerged_survival_HN$ENST00000484238.6 > median(tertMerged_survival_HN$ENST00000484238.6),"High","Low")
tertMerged_survival_HN$status <- ifelse(tertMerged_survival_HN$ENST00000484238.6 > median(tertMerged_survival_HN$ENST00000484238.6),"High","Low")
fit <- survfit(Surv(OS) ~ status, data = tertMerged_survival_HN)
ggsurvplot(fit, data = tertMerged_survival,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
ggsurvplot(fit, data = tertMerged_survival_HN,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
fit <- survfit(Surv(OS.time) ~ status, data = tertMerged_survival_HN)
ggsurvplot(fit, data = tertMerged_survival_HN,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
tertMerged_survival <- tertMerged[!is.na(tertMerged$OS.time),]
tertMerged_survival_HN <-tertMerged_survival[tertMerged_survival$primary.disease.or.tissue == "Head & Neck Squamous Cell Carcinoma",]
tertMerged_survival_HN$status <- ifelse(tertMerged_survival_HN$ENST00000484238.6 > median(tertMerged_survival_HN$ENST00000484238.6),"High","Low")
fit <- survfit(Surv(OS.time) ~ status, data = tertMerged_survival_HN)
ggsurvplot(fit, data = tertMerged_survival_HN,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
View(tertMerged_survival_HN)
median(tertMerged_survival_HN$ENST00000484238.6)
?ggsurvplot
View(tertMerged_survival_HN)
survdiff(fit, testMerged_survival_HN)
survdiff(as.formula('OS.time ~ status'), testMerged_survival_HN, subset, na.action, rho=0, timefix=TRUE
)
testMerged_survival_HN
tertMerged_survival_HN
survdiff(as.formula('OS.time ~ status'), tertMerged_survival_HN, subset, na.action, rho=0, timefix=TRUE
)
survdiff(as.formula('OS.time ~ status'), tertMerged_survival_HN)
?survdiff
fit <- survfit(Surv(OS.time,status), data = tertMerged_survival_HN)
ggsurvplot(fit, data = tertMerged_survival_HN,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
fit <- survfit(Surv(OS.time ~ status), data = tertMerged_survival_HN)
ggsurvplot(fit, data = tertMerged_survival_HN,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
?survfit
tertMerged_survival_HN$OS.time
tertMerged_survival_HN$OS.time <- as.numeric(tertMerged_survival_HN$OS.time)
fit <- survfit(Surv(OS.time ~ status), data = tertMerged_survival_HN)
tertMerged_survival_HN$OS.time
fit <- survfit(Surv(OS.time ~ status), data = tertMerged_survival_HN)
fit <- survfit(Surv(OS.time, status) ~ 1, data = tertMerged_survival_HN)
View(tertClin)
View(tertMerged_survival_HN)
fit <- survfit(Surv(OS.time, OS) ~ status, data = tertMerged_survival_HN)
ggsurvplot(fit, data = tertMerged_survival_HN,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
View(tertSurvival)
table(tertSurvival$sample)
table(tertSurvival$sample)[table(tertSurvival$sample)>1]
View(tertMerged_survival_HN)
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type != "Solid Tissue Normal",]
tertMerged_survival_HN <-tertMerged_survival[tertMerged_survival$primary.disease.or.tissue == "Head & Neck Squamous Cell Carcinoma",]
tertMerged_survival_HN$status <- ifelse(tertMerged_survival_HN$ENST00000484238.6 > median(tertMerged_survival_HN$ENST00000484238.6),"High","Low")
tertMerged_survival_HN <-tertMerged_survival[tertMerged_survival$primary.disease.or.tissue == "Head & Neck Squamous Cell Carcinoma",]
tertMerged_survival <- tertMerged[!is.na(tertMerged$OS.time),]
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type != "Solid Tissue Normal"]
class(tertMerged_survival$X_sample_type)
table(tertMerged_survival$X_sample_type)
table(tertMerged_survival$X_sample_type)
tertMerged_survival$X_sample_type
tert <- read.csv('~/research/scripts/mathushan/xenaTERT.tsv',sep='\t',stringsAsFactors = F)
tertClin <- read.csv('~/research/scripts/mathushan/TcgaTargetGTEX_phenotype.txt',sep='\t',stringsAsFactors = F)
tertSurvival <- read.csv('~/research/scripts/mathushan/TCGA_survival_data',sep='\t',stringsAsFactors = F)
tertMerged <- Reduce(function(x, y) merge(x, y, by="sample", all=TRUE), list(tert, tertClin, tertSurvival))
m
tertMerged_survival <- tertMerged[!is.na(tertMerged$OS.time),]
table(tertMerged_survival$X_sample_type)
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type %in% c("Solid Tissue Normal","Metastatic"),]
tertMerged_survival_HN <-tertMerged_survival[tertMerged_survival$primary.disease.or.tissue == "Head & Neck Squamous Cell Carcinoma",]
table(tertMerged_survival_HN$X_sample_type)
tertMerged_survival <- tertMerged[!is.na(tertMerged$OS.time),]
testMerged_survival <- tertMerged_survival[!tertMerged_survival$X_sample_type %in% c("Solid Tissue Normal","Metastatic"),]
tertMerged_survival_HN <-tertMerged_survival[tertMerged_survival$primary.disease.or.tissue == "Head & Neck Squamous Cell Carcinoma",]
tertMerged_survival_HN$status <- ifelse(tertMerged_survival_HN$ENST00000484238.6 > median(tertMerged_survival_HN$ENST00000484238.6),"High","Low")
fit <- survfit(Surv(OS.time, OS) ~ status, data = tertMerged_survival_HN)
ggsurvplot(fit, data = tertMerged_survival_HN,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
testMerged_survival <- tertMerged_survival[!(tertMerged_survival$X_sample_type %in% c("Solid Tissue Normal","Metastatic")),]
tertMerged_survival_HN <-tertMerged_survival[tertMerged_survival$primary.disease.or.tissue == "Head & Neck Squamous Cell Carcinoma",]
tertMerged_survival$X_sample_type
testMerged_survival <- tertMerged_survival[!(tertMerged_survival$X_sample_type %in% c("Solid Tissue Normal","Metastatic")),]
tertMerged_survival$X_sample_type
testMerged_survival <- tertMerged_survival[!( c("Solid Tissue Normal","Metastatic") %in% tertMerged_survival$X_sample_type),]
testMerged_survival <- tertMerged_survival[!grepl("Normal|Metastatic",tertMerged_survival$X_sample_type),]
testMerged_survival <- tertMerged_survival[!grepl("Normal|Metastatic",tertMerged_survival$X_sample_type)]
tertMerged_survival <- tertMerged[!is.na(tertMerged$OS.time),]
testMerged_survival <- tertMerged_survival[!grepl("Normal|Metastatic",tertMerged_survival$X_sample_type),]
tertMerged_survival_HN <-tertMerged_survival[tertMerged_survival$primary.disease.or.tissue == "Head & Neck Squamous Cell Carcinoma",]
tertMerged_survival_HN$status <- ifelse(tertMerged_survival_HN$ENST00000484238.6 > median(tertMerged_survival_HN$ENST00000484238.6),"High","Low")
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type %in% c("Primary Tumor")),]
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type %in% c("Primary Tumor"),]
tertMerged_survival <- tertMerged[!is.na(tertMerged$OS.time),]
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type %in% c("Primary Tumor"),]
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type == "Primary Tumor",]
class(tertMerged_survival$X_sample_typ)
View(tertMerged_survival)
tertMerged_survival <- tertMerged[!is.na(tertMerged$OS.time),]
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type == "Primary Tumor",]
testMerged_survival <- tertMerged_survival[,tertMerged_survival$X_sample_type == "Primary Tumor"]
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type == "Primary Tumor"]
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type == "Primary Tumor",]
tertMerged_survival$X_sample_type
testMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type == "Primary Tumor",]
tertMerged_survival <- tertMerged[!is.na(tertMerged$OS.time),]
tertMerged_survival <- tertMerged_survival[tertMerged_survival$X_sample_type == "Primary Tumor",]
tertMerged_survival_HN <- tertMerged_survival[tertMerged_survival$primary.disease.or.tissue == "Head & Neck Squamous Cell Carcinoma",]
tertMerged_survival_HN$status <- ifelse(tertMerged_survival_HN$ENST00000484238.6 > median(tertMerged_survival_HN$ENST00000484238.6),"High","Low")
fit <- survfit(Surv(OS.time, OS) ~ status, data = tertMerged_survival_HN)
ggsurvplot(fit, data = tertMerged_survival_HN,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
median(tertMerged_survival_HN$ENST00000484238.6)
?ggsurvplot
survdiff(fit,data=tertMerged_survival_HN)
survdiff(Surv(OS.time, OS) ~ status,data=tertMerged_survival_HN)
ggsurvplot(fit, data = tertMerged_survival_HN,
size = 1,                 # change line size
palette =
c("#E7B800", "#2E9FDF"),# custom color palettes
conf.int = TRUE,          # Add confidence interval
pval = TRUE,              # Add p-value
pval.method - TRUE,
risk.table = TRUE,        # Add risk table
risk.table.col = "strata",# Risk table color by groups
legend.labs = c("High", "Low"),    # Change legend labels
risk.table.height = 0.25, # Useful to change when you have multiple groups
ggtheme = theme_bw()      # Change ggplot2 theme
)
embedding %>% mutate(Disease = tertMerged$primary.disease.or.tissue) %>%
ggplot(aes(X1, X2,color = Disease)) + geom_point() + theme(legend.position = "none")
View(tertMerged)
table(tertMerged$X_primary_site)
length(table(tertMerged$X_primary_site))
length(table(tertMerged$primary.disease.or.tissue))
embedding %>% mutate(Disease = tertMerged$X_primary_site) %>%
ggplot(aes(X1, X2,color = Disease)) + geom_point() + theme(legend.position = "none")
custom.config = umap.defaults
custom.config$n_neighbors = 128
tertumap <- umap::umap(as.matrix(tertMerged[2:8]))
tertumap <- umap::umap(as.matrix(tertMerged[2:8]),custom.config)
custom.config
custom.config$n_neighbors = 128
tertumap <- umap::umap(as.matrix(tertMerged[2:8]),custom.config)
View(tertClin)
tertClin[is.na(tertClin$primary.disease.or.tissue)]
tertClin[is.na(tertClin$primary.disease.or.tissue),]
tertClin[tertClin$primary.disease.or.tissue =="",]
tertClin <- tertClin[!tertClin$primary.disease.or.tissue =="",]
tert <- tert[tert$sample != "TCGA-07-0249-20"]
tert <- tert[tert$sample != "TCGA-07-0249-20",]
tertSurvival <- tertSurvival[tertSurvival$sample != "TCGA-07-0249-20",]
View(tertSurvival)
View(tertClin)
tertClin <- read.csv('~/research/scripts/mathushan/TcgaTargetGTEX_phenotype.txt',sep='\t',stringsAsFactors = F)
tert <- read.csv('~/research/scripts/mathushan/xenaTERT.tsv',sep='\t',stringsAsFactors = F)
tertClin <- read.csv('~/research/scripts/mathushan/TcgaTargetGTEX_phenotype.txt',sep='\t',stringsAsFactors = F)
tertClin <- tertClin[match(tert$sample,tertClin$sample),]
View(tertClin)
write.table(tertClin,'~/research/scripts/mathushan/TcgaTargetGTEX_phenotype.txt',row.names = F,quote=F,sep='\t')
tertClin <- read.csv('~/research/scripts/mathushan/TcgaTargetGTEX_phenotype.txt',sep='\t',stringsAsFactors = F)
View(tertClin)
View(tert)
View(tertClin)
data <- readRDS("~/research/cancer_type_analysis/rda/lfs_methylation_m-values.rds")
beta <- t(data[8:length(data)])
colnames(beta) <- data$ids
beta <- beta[ , colSums(is.na(beta)) == 0]
library(data.table)
beta <- data.table(beta)
fwrite(beta, '/Users/vsubasri/research/feature_selection/optimalclust/allmeth_ward_euclidean/lfs_methylation_m-values.tab',sep='\t')
View(beta)
beta <- t(data[8:length(data)])
beta <- data[8:length(data)]
rownames(beta) <- data$ids
beta <- beta[ , colSums(is.na(beta)) == 0]
setDT(beta)
fwrite(beta, '/Users/vsubasri/research/feature_selection/optimalclust/allmeth_ward_euclidean/lfs_methylation_m-values.tab',sep='\t')
wd <- "~/hrt/examples/lfs_mostdiff10k_nclust740"
clust <- read.csv(paste0(wd,'/data/clustered_probes.tab'), stringsAsFactors = F, header=F, sep='\t')
refitted_fdr <- read.csv(paste0(wd,'/output/repeated_cv_lasso.csv'),stringsAsFactors = F)
sig_probes <-refitted_fdr$probe[refitted_fdr$CV_FDR < 0.15]
clust_sig <- clust[grepl(paste0(sig_probes,collapse='|'), clust$V2),]
clust_probes <- strsplit(gsub("[^[:alnum:] ]", "", clust_sig$V2), " +")
library(dplyr)
library(IlluminaHumanMethylation450kanno.ilmn12.hg19)
library(bedr)
anno <- getAnnotation(IlluminaHumanMethylation450kanno.ilmn12.hg19) %>% data.frame()
anno_sig_clusts <- anno[anno$Name %in% unlist(clust_probes),]
sig_clusts_bed<- data.frame(chr=as.character(anno_sig_clusts$chr),
start=as.numeric(anno_sig_clusts$pos),
end=as.numeric(anno_sig_clusts$pos),
probe=anno_sig_clusts$Name,
stringsAsFactors = F)
sig_clusts_bed$probe
anno$cluster<- unlist(lapply(sig_clusts_bed$probe, function(x) grep(x,clust$V2)))
sig_clusts_bed$cluster<- unlist(lapply(sig_clusts_bed$probe, function(x) grep(x,clust$V2)))
View(sig_clusts_bed)
write.table(sig_clusts_bed,'~/research/transposable_elements/sigclust740probes.bed',sep='\t',quote = F,row.names = F,col.names = F)
clust_probes <- strsplit(gsub("[^[:alnum:] ]", "", clust$V2), " +")
anno_sig_clusts <- anno[anno$Name %in% unlist(clust_probes),]
sig_clusts_bed<- data.frame(chr=as.character(anno_sig_clusts$chr),
start=as.numeric(anno_sig_clusts$pos),
end=as.numeric(anno_sig_clusts$pos),
probe=anno_sig_clusts$Name,
stringsAsFactors = F)
sig_clusts_bed$cluster<- unlist(lapply(sig_clusts_bed$probe, function(x) grep(x,clust$V2)))
write.table(sig_clusts_bed,'~/research/transposable_elements/clust740probes.bed',sep='\t',quote = F,row.names = F,col.names = F)
mei_lfs <- read.csv('~/research/transposable_elements/LFS.vep.all.filtered.annotated.tab',sep='\t',stringsAsFactors = F)
View(mei_lfs)
mei_lfs$tumortype <- lfs_clin$tumortype[match(mei_lfs$SAMPLE,lfs_clin$sample)]
lfs_clin <- read.csv('~/research/resources/wgs_clinical.csv',stringsAsFactors = F)
lfs_clin$Group <- "LFS"
mei_lfs$tumortype <- lfs_clin$tumortype[match(mei_lfs$SAMPLE,lfs_clin$sample)]
mei_lfs$GROUP <- "LFS"
mei_ACConly <- get_unique_mei("ACC")
get_unique_mei <- function(tt) {
mei_all_tt_ids <- mei$ID[mei$tumortype == tt]
mei_all_nottt_ids <- mei_all_tt_ids[!mei_all_tt_ids %in% mei$ID[mei$tumortype != tt]]
mei_all_tt <- mei[mei$ID %in% mei_all_nottt_ids,]
return(mei_all_tt)
}
mei_ACConly <- get_unique_mei("ACC")
kics_clin <- read.csv('~/research/kics/KiCS_metadata.txt',sep='\t',stringsAsFactors = F)
kics_fullclin <- read.csv('~/research/kics/KiCS_clinical.txt',sep='\t',stringsAsFactors = F)
kics_clin$Age_Diagnosis <- kics_fullclin$Age_Diagnosis[match(kics_clin$KiCS_id,kics_fullclin$KiCS.ID)]
kics_clin$Age_Diagnosis <- kics_clin$Age_Diagnosis*12
kics_clin$tumortype <- ifelse(kics_clin$tumortype %in% c("OST","OS"),"OS",kics_clin$tumortype)
kics_clin$tumortype <- ifelse(kics_clin$tumortype %in% c("ARMS","ERMS"),"RMS",kics_clin$tumortype)
LFS_ids <- c("51","167","220","95","161")
kics_clin$Group <- ifelse(kics_clin$KiCS_id %in% LFS_ids, "LFS_KiCS","KiCS")
mei_kics <- read.csv('~/research/kics/KiCS.vep.all.filtered.annotated.tab',sep='\t',stringsAsFactors = F)
mei_kics$SAMPLE <- str_replace(mei_kics$SAMPLE,"N_-_","")
mei_kics$SAMPLE <- str_replace(mei_kics$SAMPLE,"293107_3","293107")
kics_clin$Normal_id[match(mei_kics$SAMPLE,kics_clin$Normal_id)]
mei_kics$tumortype <- kics_clin$tumortype[match(mei_kics$SAMPLE,kics_clin$Normal_id)]
mei_kics <- mei_kics[!is.na(mei_kics$tumortype),]
mei_kics$GROUP <- "KiCS"
mei_kics <- mei_kics[!mei_kics$SAMPLE %in% kics_clin$Normal_id[kics_clin$Group == "LFS_KiCS"],]
relapse_metastasis <- unique(kics_clin$Normal_id[kics_clin$Stage %in% c("Relapse","Metastasis")])
mei_kics <- mei_kics[!mei_kics$SAMPLE %in% relapse_metastasis,]
mei_kics <- mei_kics[!mei_kics$SAMPLE %in% "293107",]
mei <- rbind(mei_lfs,mei_kics)
mei$tumortype <- ifelse(mei$tumortype %in% c("OST","OS"),"OS",mei$tumortype)
mei$tumortype <- ifelse(mei$tumortype %in% c("ARMS","ERMS"),"RMS",mei$tumortype)
get_unique_mei <- function(tt) {
mei_all_tt_ids <- mei$ID[mei$tumortype == tt]
mei_all_nottt_ids <- mei_all_tt_ids[!mei_all_tt_ids %in% mei$ID[mei$tumortype != tt]]
mei_all_tt <- mei[mei$ID %in% mei_all_nottt_ids,]
return(mei_all_tt)
}
mei_ACConly <- get_unique_mei("ACC")
View(mei_ACConly)
View(mei_lfs)
View(mei_lfs)
mei_OSonly <- get_unique_mei("OS")
mei_RMSonly <- get_unique_mei("RMS")
mei_CPConly <- get_unique_mei("CPC")
mei_BRCAonly <- get_unique_mei("BRCA")
mei_Unaffectedonly <- get_unique_mei("Unaffected")
View(mei_ACConly)
View(mei_OSonly)
get_rep_TE <- function(mei_only,freq) {
mei_only$GENE <- do.call(rbind,str_split(mei_only$VEP_SYMBOL,"\\|"))[,1]
mei_only$GENE <- ifelse(mei_only$GENE %in% c("",NA),mei_only$ID,mei_only$GENE)
mei_only_freq <- data.frame(table(mei_only$GENE)[table(mei_only$GENE)>freq],stringsAsFactors = F)
mei_only_freq$Gene <- mei_only$VEP_SYMBOL[match(mei_only_freq$Var1,mei_only$GENE)]
mei_only_freq$Tumortype <- mei_only$tumortype[match(mei_only_freq$Var1,mei_only$GENE)]
mei_only_freq$Gene <- do.call(cbind,str_split(mei_only_freq$Gene,"\\|"))[1,]
mei_only_freq$Var1 <- as.character(mei_only_freq$Var1)
mei_only_freq$Gene <- ifelse(mei_only_freq$Gene %in% c("",NA),mei_only_freq$Var1,mei_only_freq$Gene)
return(mei_only_freq)
}
mei_ACConly_freq <- get_rep_TE(mei_ACConly,2)
library(stringr)
mei_ACConly_freq <- get_rep_TE(mei_ACConly,2)
View(mei_ACConly_freq)
View(mei_ACConly)
baseline_score <- read.csv(paste0(wd,'/output/model_performance_lasso.csv'),row.names=1,stringsAsFactors = F)
pred_bs_melt <- melt(pred_bs, id="Bootstrap")
pred_bs_melt$measure <- do.call(rbind, str_split(pred_bs_melt$variable,'_'))[,1]
pred_bs_melt$cancertype <- do.call(rbind, str_split(pred_bs_melt$variable,'_'))[,2]
View(baseline_score)
View(baseline_score)
test1970 <- read.csv('~/research/lfs_wt/structural_variations/final_svs/1970/1970.canceronly_fpfilteredvariants.txt',sep='\t')
View(test1970)
test1971 <- read.csv('~/research/lfs_wt/structural_variations/final_svs/1971/1971.canceronly_fpfilteredvariants.txt',sep='\t')
View(test1971)
View(test1971)
View(test1971)
test1777 <- read.csv('~/research/lfs_wt/structural_variations/final_svs/1777/1777.canceronly_fpfilteredvariants.txt',sep='\t')
test1777 <- read.csv('~/research/lfs_wt/structural_variations/final_svs/1777/1777.annotated.fpfiltered',sep='\t')
View(test1777)
test1774 <- read.csv('~/research/lfs_wt/structural_variations/final_svs/1774/1774.annotated.fpfiltered',sep='\t')
View(test1774)
test2767 <- read.csv('~/research/lfs_wt/structural_variations/final_svs/2767/2767.annotated.fpfiltered',sep='\t')
View(test2767)
View(test2767)
test2767gatk <- read.csv('~/research/lfs_wt/2767.canceronly_variants.txt',sep='\t')
test <- read.csv('all.pathogenic.txt',sep='\t')
View(test)
View(test)
test <- read.csv('all.pathogenic.txt',sep='\t')
View(test)
test <- read.csv('~/rms_germline/structural_variation/rms_svs_exonic.txt',sep='\t')
test <- read.csv('~/research/rms_germline/structural_variation/rms_svs_exonic.txt',sep='\t')
test2 <- read.csv('~/research/rms_germline/structural_variation/all.pathogenic.filtered.cpg.txt',sep='\t')
View(test2)
test <- read.csv('all.pathogenic.txt',sep='\t')
View(test)
View(test)
test <- test[test$SV.type != "TRA"]
test <- test[test$SV.type != "TRA",]
View(test)
test_exonic <- test[grepl("exon",test$location)]
test_exonic <- test[grepl("exon",test$location),]
table(test_exonic$Gene.name)
table(test_exonic$Gene.name)[table(test_exonic$Gene.name) > 0]
length(table(test_exonic$Gene.name)[table(test_exonic$Gene.name) > 0])
length(table(test_exonic$Gene.name)[table(test_exonic$Gene.name) > 0])
View(test)
View(test)
source('~/research/pathway_analysis/pathway_analysis.R')
?fisher.test
?fisher_test
View(cpdb_genes)
cnv <- read.csv('~/wt_cnvs/1971.dels.anno.hg19_multianno.final',sep='\t')
View(cnv)
cnv <- read.csv('~/wt_cnvs/1971.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/1970.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/1970.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/733.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/733_1.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/735.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/744.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/735.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/735.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/744.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/3024.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/3024.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/3020.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/3021.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/3023.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/3023.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/3021.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/3020.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/4356.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/4356.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/4357.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/4357.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/2767.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/2767.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/2766.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/2786.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/2768.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/2768.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/2767.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/2766.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/2769.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/21774.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/1774.dels.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/1774.dups.anno.hg19_multianno.final',sep='\t')
install.packages("g3viz", repos = "http://cran.us.r-project.org")
library(g3viz)
cnv <- read.csv('~/wt_cnvs/2767.dups.anno.hg19_multianno.final',sep='\t')
cnv <- read.csv('~/wt_cnvs/735.dups.anno.hg19_multianno.final',sep='\t')
View(cnv)
